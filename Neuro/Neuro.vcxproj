<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{913DCDCD-2B3B-4F8B-9C6D-10D7388B0B45}</ProjectGuid>
    <RootNamespace>Neuro</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <CudaToolkitCustomDir>$(CUDA_PATH)</CudaToolkitCustomDir>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.0.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(ProjectDir)include;$(IncludePath)</IncludePath>
    <OutDir>$(ProjectDir)lib\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(ProjectDir)include;$(IncludePath)</IncludePath>
    <OutDir>$(ProjectDir)lib\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)deps\MKL-DNN\include;$(ProjectDir)deps\MKL\include;$(ProjectDir)deps\CUDA\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Lib>
      <AdditionalLibraryDirectories>$(ProjectDir)deps\MKL-DNN\lib;$(ProjectDir)deps\MKL\lib;$(ProjectDir)deps\CUDA\lib;$(CudaToolkitLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>cudart_static.lib;cudnn.lib;cublas.lib</AdditionalDependencies>
    </Lib>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>
      </Include>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)deps\MKL-DNN\include;$(ProjectDir)deps\MKL\include;$(ProjectDir)deps\CUDA\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <AdditionalLibraryDirectories>$(ProjectDir)deps\MKL-DNN\lib;$(ProjectDir)deps\MKL\lib;$(CudaToolkitLibDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>cudart_static.lib;cudnn.lib;cublas.lib</AdditionalDependencies>
    </Lib>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>
      </Include>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="include\Activations.h" />
    <ClInclude Include="include\ChartGenerator.h" />
    <ClInclude Include="include\Data.h" />
    <ClInclude Include="include\Initializers\Constant.h" />
    <ClInclude Include="include\Initializers\GlorotNormal.h" />
    <ClInclude Include="include\Initializers\GlorotUniform.h" />
    <ClInclude Include="include\Initializers\InitializerBase.h" />
    <ClInclude Include="include\Initializers\Normal.h" />
    <ClInclude Include="include\Initializers\Uniform.h" />
    <ClInclude Include="include\Initializers\Zeros.h" />
    <ClInclude Include="include\Layers\BatchNormalization.h" />
    <ClInclude Include="include\Layers\Concatenate.h" />
    <ClInclude Include="include\Layers\Conv2D.h" />
    <ClInclude Include="include\Layers\Conv2DTranspose.h" />
    <ClInclude Include="include\Layers\Dense.h" />
    <ClInclude Include="include\Layers\Dropout.h" />
    <ClInclude Include="include\Layers\Flatten.h" />
    <ClInclude Include="include\Layers\Input.h" />
    <ClInclude Include="include\Layers\Lambda.h" />
    <ClInclude Include="include\Layers\LayerBase.h" />
    <ClInclude Include="include\Layers\Merge.h" />
    <ClInclude Include="include\Layers\Pooling2D.h" />
    <ClInclude Include="include\Layers\UpSampling2D.h" />
    <ClInclude Include="include\Loss.h" />
    <ClInclude Include="include\Models\Flow.h" />
    <ClInclude Include="include\Models\ModelBase.h" />
    <ClInclude Include="include\Models\Sequential.h" />
    <ClInclude Include="include\NeuralNetwork.h" />
    <ClInclude Include="include\Neuro.h" />
    <ClInclude Include="include\Optimizers\Adam.h" />
    <ClInclude Include="include\Optimizers\OptimizerBase.h" />
    <ClInclude Include="include\Optimizers\SGD.h" />
    <ClInclude Include="include\ParametersAndGradients.h" />
    <ClInclude Include="include\Random.h" />
    <ClInclude Include="include\Stopwatch.h" />
    <ClInclude Include="include\Tensors\Cuda\CudaDeviceVariable.h" />
    <ClInclude Include="include\Tensors\Cuda\CudaKernels.h" />
    <ClInclude Include="include\Tensors\Shape.h" />
    <ClInclude Include="include\Tensors\Tensor.h" />
    <ClInclude Include="include\Tensors\TensorFormatter.h" />
    <ClInclude Include="include\Tensors\TensorOpCpu.h" />
    <ClInclude Include="include\Tensors\TensorOpGpu.h" />
    <ClInclude Include="include\Tensors\TensorOpMultiCpu.h" />
    <ClInclude Include="include\TestTools.h" />
    <ClInclude Include="include\Tools.h" />
    <ClInclude Include="include\Types.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\Activations.cpp" />
    <ClCompile Include="src\ChartGenerator.cpp" />
    <ClCompile Include="src\Initializers\Constant.cpp" />
    <ClCompile Include="src\Initializers\GlorotNormal.cpp" />
    <ClCompile Include="src\Initializers\GlorotUniform.cpp" />
    <ClCompile Include="src\Initializers\Normal.cpp" />
    <ClCompile Include="src\Initializers\Uniform.cpp" />
    <ClCompile Include="src\Initializers\Zeros.cpp" />
    <ClCompile Include="src\Layers\BatchNormalization.cpp" />
    <ClCompile Include="src\Layers\Concatenate.cpp" />
    <ClCompile Include="src\Layers\Conv2D.cpp" />
    <ClCompile Include="src\Layers\Conv2DTranspose.cpp" />
    <ClCompile Include="src\Layers\Dense.cpp" />
    <ClCompile Include="src\Layers\Dropout.cpp" />
    <ClCompile Include="src\Layers\Flatten.cpp" />
    <ClCompile Include="src\Layers\Input.cpp" />
    <ClCompile Include="src\Layers\Lambda.cpp" />
    <ClCompile Include="src\Layers\LayerBase.cpp" />
    <ClCompile Include="src\Layers\Merge.cpp" />
    <ClCompile Include="src\Layers\Pooling2D.cpp" />
    <ClCompile Include="src\Layers\UpSampling2D.cpp" />
    <ClCompile Include="src\Loss.cpp" />
    <ClCompile Include="src\Models\Flow.cpp" />
    <ClCompile Include="src\Models\ModelBase.cpp" />
    <ClCompile Include="src\Models\Sequential.cpp" />
    <ClCompile Include="src\NeuralNetwork.cpp" />
    <ClCompile Include="src\Optimizers\Adam.cpp" />
    <ClCompile Include="src\Optimizers\OptimizerBase.cpp" />
    <ClCompile Include="src\Optimizers\SGD.cpp" />
    <ClCompile Include="src\Random.cpp" />
    <ClCompile Include="src\Stopwatch.cpp" />
    <ClCompile Include="src\Tensors\Shape.cpp" />
    <ClCompile Include="src\Tensors\Tensor.cpp" />
    <ClCompile Include="src\Tensors\TensorFormatter.cpp" />
    <ClCompile Include="src\Tensors\TensorOpCpu.cpp" />
    <ClCompile Include="src\Tensors\TensorOpGpu.cpp" />
    <ClCompile Include="src\Tensors\TensorOpMultiCpu.cpp" />
    <ClCompile Include="src\TestTools.cpp" />
    <ClCompile Include="src\Tools.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="src\Tensors\Cuda\CudaKernels.cu" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.0.targets" />
  </ImportGroup>
</Project>