#include <algorithm>
#include "Activations.h"
#include "ComputationalGraph/Ops.h"

namespace Neuro
{	
	//////////////////////////////////////////////////////////////////////////
    NodeBase* Linear::Build(NodeBase* input)
    {
        return input;
    }

	//////////////////////////////////////////////////////////////////////////
    NodeBase* Sigmoid::Build(NodeBase* input)
    {
        return sigmoid(input);
    }

    //////////////////////////////////////////////////////////////////////////
    NodeBase* Tanh::Build(NodeBase* input)
    {
        return tanh(input);
    }

    //////////////////////////////////////////////////////////////////////////
    LeakyReLU::LeakyReLU(float alpha)
        : m_Alpha(alpha)
    {
    }

    //////////////////////////////////////////////////////////////////////////
    NodeBase* LeakyReLU::Build(NodeBase* input)
    {
        assert(false);
        return nullptr;
    }

    //////////////////////////////////////////////////////////////////////////
    NodeBase* ReLU::Build(NodeBase* input)
    {
        assert(false);
        return nullptr;
    }

    //////////////////////////////////////////////////////////////////////////
    NodeBase* ELU::Build(NodeBase* input)
    {
        assert(false);
        return nullptr;
    }

    //////////////////////////////////////////////////////////////////////////
    NodeBase* Softmax::Build(NodeBase* input)
    {
        return softmax(input);
    }
}
